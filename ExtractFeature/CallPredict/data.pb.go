// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data.proto

package CallPredict

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	Duration               uint32   `protobuf:"varint,1,opt,name=duration,proto3" json:"duration,omitempty"`
	ProtocolType           string   `protobuf:"bytes,2,opt,name=protocolType,proto3" json:"protocolType,omitempty"`
	Service                uint32   `protobuf:"varint,3,opt,name=service,proto3" json:"service,omitempty"`
	Flag                   string   `protobuf:"bytes,4,opt,name=flag,proto3" json:"flag,omitempty"`
	SrcBytes               uint32   `protobuf:"varint,5,opt,name=srcBytes,proto3" json:"srcBytes,omitempty"`
	DstBytes               uint32   `protobuf:"varint,6,opt,name=dstBytes,proto3" json:"dstBytes,omitempty"`
	Land                   uint32   `protobuf:"varint,7,opt,name=land,proto3" json:"land,omitempty"`
	WrongFragment          uint32   `protobuf:"varint,8,opt,name=wrongFragment,proto3" json:"wrongFragment,omitempty"`
	Urgent                 uint32   `protobuf:"varint,9,opt,name=urgent,proto3" json:"urgent,omitempty"`
	Host                   uint32   `protobuf:"varint,10,opt,name=host,proto3" json:"host,omitempty"`
	NumFailedLogins        uint32   `protobuf:"varint,11,opt,name=numFailedLogins,proto3" json:"numFailedLogins,omitempty"`
	LoggedIn               uint32   `protobuf:"varint,12,opt,name=loggedIn,proto3" json:"loggedIn,omitempty"`
	NumCompromised         uint32   `protobuf:"varint,13,opt,name=numCompromised,proto3" json:"numCompromised,omitempty"`
	RootShell              uint32   `protobuf:"varint,14,opt,name=rootShell,proto3" json:"rootShell,omitempty"`
	SuAttempted            uint32   `protobuf:"varint,15,opt,name=suAttempted,proto3" json:"suAttempted,omitempty"`
	NumRoot                uint32   `protobuf:"varint,16,opt,name=numRoot,proto3" json:"numRoot,omitempty"`
	NumFileCreations       uint32   `protobuf:"varint,17,opt,name=numFileCreations,proto3" json:"numFileCreations,omitempty"`
	NumShells              uint32   `protobuf:"varint,18,opt,name=numShells,proto3" json:"numShells,omitempty"`
	NumAccessFiles         uint32   `protobuf:"varint,19,opt,name=numAccessFiles,proto3" json:"numAccessFiles,omitempty"`
	NumOutboundCmds        uint32   `protobuf:"varint,20,opt,name=numOutboundCmds,proto3" json:"numOutboundCmds,omitempty"`
	IsHotLogin             uint32   `protobuf:"varint,21,opt,name=isHotLogin,proto3" json:"isHotLogin,omitempty"`
	IsGuestLogin           uint32   `protobuf:"varint,22,opt,name=isGuestLogin,proto3" json:"isGuestLogin,omitempty"`
	Count                  uint32   `protobuf:"varint,23,opt,name=count,proto3" json:"count,omitempty"`
	SrvCount               uint32   `protobuf:"varint,24,opt,name=srvCount,proto3" json:"srvCount,omitempty"`
	SErrorRate             float32  `protobuf:"fixed32,25,opt,name=sErrorRate,proto3" json:"sErrorRate,omitempty"`
	SrvSErrorRate          float32  `protobuf:"fixed32,26,opt,name=srvSErrorRate,proto3" json:"srvSErrorRate,omitempty"`
	RErrorRate             float32  `protobuf:"fixed32,27,opt,name=rErrorRate,proto3" json:"rErrorRate,omitempty"`
	SrvRErrorRate          float32  `protobuf:"fixed32,28,opt,name=srvRErrorRate,proto3" json:"srvRErrorRate,omitempty"`
	SameSrvRate            float32  `protobuf:"fixed32,29,opt,name=sameSrvRate,proto3" json:"sameSrvRate,omitempty"`
	DiffSrvRate            float32  `protobuf:"fixed32,30,opt,name=diffSrvRate,proto3" json:"diffSrvRate,omitempty"`
	SrvDiffHostRate        float32  `protobuf:"fixed32,31,opt,name=srvDiffHostRate,proto3" json:"srvDiffHostRate,omitempty"`
	DstHostCount           uint32   `protobuf:"varint,32,opt,name=dstHostCount,proto3" json:"dstHostCount,omitempty"`
	DstHostSrvCount        uint32   `protobuf:"varint,33,opt,name=dstHostSrvCount,proto3" json:"dstHostSrvCount,omitempty"`
	DstHostSameSrvRate     float32  `protobuf:"fixed32,34,opt,name=dstHostSameSrvRate,proto3" json:"dstHostSameSrvRate,omitempty"`
	DstHostDiffSrvRate     float32  `protobuf:"fixed32,35,opt,name=dstHostDiffSrvRate,proto3" json:"dstHostDiffSrvRate,omitempty"`
	DstHostSameSrcPortRate float32  `protobuf:"fixed32,36,opt,name=dstHostSameSrcPortRate,proto3" json:"dstHostSameSrcPortRate,omitempty"`
	DstHostSrvDiffHostRate float32  `protobuf:"fixed32,37,opt,name=dstHostSrvDiffHostRate,proto3" json:"dstHostSrvDiffHostRate,omitempty"`
	DstHostSErrorRate      float32  `protobuf:"fixed32,38,opt,name=dstHostSErrorRate,proto3" json:"dstHostSErrorRate,omitempty"`
	DstHostSrvSErrorRate   float32  `protobuf:"fixed32,39,opt,name=dstHostSrvSErrorRate,proto3" json:"dstHostSrvSErrorRate,omitempty"`
	DstHostRErrorRate      float32  `protobuf:"fixed32,40,opt,name=dstHostRErrorRate,proto3" json:"dstHostRErrorRate,omitempty"`
	DstHostSrvRErrorRate   float32  `protobuf:"fixed32,41,opt,name=dstHostSrvRErrorRate,proto3" json:"dstHostSrvRErrorRate,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetDuration() uint32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *Request) GetProtocolType() string {
	if m != nil {
		return m.ProtocolType
	}
	return ""
}

func (m *Request) GetService() uint32 {
	if m != nil {
		return m.Service
	}
	return 0
}

func (m *Request) GetFlag() string {
	if m != nil {
		return m.Flag
	}
	return ""
}

func (m *Request) GetSrcBytes() uint32 {
	if m != nil {
		return m.SrcBytes
	}
	return 0
}

func (m *Request) GetDstBytes() uint32 {
	if m != nil {
		return m.DstBytes
	}
	return 0
}

func (m *Request) GetLand() uint32 {
	if m != nil {
		return m.Land
	}
	return 0
}

func (m *Request) GetWrongFragment() uint32 {
	if m != nil {
		return m.WrongFragment
	}
	return 0
}

func (m *Request) GetUrgent() uint32 {
	if m != nil {
		return m.Urgent
	}
	return 0
}

func (m *Request) GetHost() uint32 {
	if m != nil {
		return m.Host
	}
	return 0
}

func (m *Request) GetNumFailedLogins() uint32 {
	if m != nil {
		return m.NumFailedLogins
	}
	return 0
}

func (m *Request) GetLoggedIn() uint32 {
	if m != nil {
		return m.LoggedIn
	}
	return 0
}

func (m *Request) GetNumCompromised() uint32 {
	if m != nil {
		return m.NumCompromised
	}
	return 0
}

func (m *Request) GetRootShell() uint32 {
	if m != nil {
		return m.RootShell
	}
	return 0
}

func (m *Request) GetSuAttempted() uint32 {
	if m != nil {
		return m.SuAttempted
	}
	return 0
}

func (m *Request) GetNumRoot() uint32 {
	if m != nil {
		return m.NumRoot
	}
	return 0
}

func (m *Request) GetNumFileCreations() uint32 {
	if m != nil {
		return m.NumFileCreations
	}
	return 0
}

func (m *Request) GetNumShells() uint32 {
	if m != nil {
		return m.NumShells
	}
	return 0
}

func (m *Request) GetNumAccessFiles() uint32 {
	if m != nil {
		return m.NumAccessFiles
	}
	return 0
}

func (m *Request) GetNumOutboundCmds() uint32 {
	if m != nil {
		return m.NumOutboundCmds
	}
	return 0
}

func (m *Request) GetIsHotLogin() uint32 {
	if m != nil {
		return m.IsHotLogin
	}
	return 0
}

func (m *Request) GetIsGuestLogin() uint32 {
	if m != nil {
		return m.IsGuestLogin
	}
	return 0
}

func (m *Request) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Request) GetSrvCount() uint32 {
	if m != nil {
		return m.SrvCount
	}
	return 0
}

func (m *Request) GetSErrorRate() float32 {
	if m != nil {
		return m.SErrorRate
	}
	return 0
}

func (m *Request) GetSrvSErrorRate() float32 {
	if m != nil {
		return m.SrvSErrorRate
	}
	return 0
}

func (m *Request) GetRErrorRate() float32 {
	if m != nil {
		return m.RErrorRate
	}
	return 0
}

func (m *Request) GetSrvRErrorRate() float32 {
	if m != nil {
		return m.SrvRErrorRate
	}
	return 0
}

func (m *Request) GetSameSrvRate() float32 {
	if m != nil {
		return m.SameSrvRate
	}
	return 0
}

func (m *Request) GetDiffSrvRate() float32 {
	if m != nil {
		return m.DiffSrvRate
	}
	return 0
}

func (m *Request) GetSrvDiffHostRate() float32 {
	if m != nil {
		return m.SrvDiffHostRate
	}
	return 0
}

func (m *Request) GetDstHostCount() uint32 {
	if m != nil {
		return m.DstHostCount
	}
	return 0
}

func (m *Request) GetDstHostSrvCount() uint32 {
	if m != nil {
		return m.DstHostSrvCount
	}
	return 0
}

func (m *Request) GetDstHostSameSrvRate() float32 {
	if m != nil {
		return m.DstHostSameSrvRate
	}
	return 0
}

func (m *Request) GetDstHostDiffSrvRate() float32 {
	if m != nil {
		return m.DstHostDiffSrvRate
	}
	return 0
}

func (m *Request) GetDstHostSameSrcPortRate() float32 {
	if m != nil {
		return m.DstHostSameSrcPortRate
	}
	return 0
}

func (m *Request) GetDstHostSrvDiffHostRate() float32 {
	if m != nil {
		return m.DstHostSrvDiffHostRate
	}
	return 0
}

func (m *Request) GetDstHostSErrorRate() float32 {
	if m != nil {
		return m.DstHostSErrorRate
	}
	return 0
}

func (m *Request) GetDstHostSrvSErrorRate() float32 {
	if m != nil {
		return m.DstHostSrvSErrorRate
	}
	return 0
}

func (m *Request) GetDstHostRErrorRate() float32 {
	if m != nil {
		return m.DstHostRErrorRate
	}
	return 0
}

func (m *Request) GetDstHostSrvRErrorRate() float32 {
	if m != nil {
		return m.DstHostSrvRErrorRate
	}
	return 0
}

type Response struct {
	Label                uint32   `protobuf:"varint,1,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_871986018790d2fd, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

func init() {
	proto.RegisterType((*Request)(nil), "CallPredict.Request")
	proto.RegisterType((*Response)(nil), "CallPredict.Response")
}

func init() {
	proto.RegisterFile("data.proto", fileDescriptor_871986018790d2fd)
}

var fileDescriptor_871986018790d2fd = []byte{
	// 669 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x55, 0xdd, 0x4e, 0xdb, 0x3e,
	0x14, 0xff, 0x97, 0x3f, 0x50, 0x38, 0xe5, 0xd3, 0x2b, 0xcc, 0x63, 0x8c, 0x75, 0x1d, 0x63, 0xdd,
	0x34, 0xf5, 0x82, 0x49, 0xd3, 0x6e, 0x59, 0x19, 0x30, 0x69, 0xd2, 0x50, 0xba, 0x17, 0x08, 0x89,
	0x1b, 0x22, 0x39, 0x76, 0x66, 0x3b, 0x45, 0x3c, 0xe3, 0x5e, 0x6a, 0xf2, 0x71, 0xd2, 0x38, 0x01,
	0xee, 0xf2, 0xfb, 0x38, 0x1f, 0x3e, 0x3e, 0x75, 0x01, 0xe2, 0xd0, 0x84, 0xe3, 0x5c, 0x49, 0x23,
	0x49, 0x6f, 0x12, 0x72, 0x7e, 0xad, 0x58, 0x9c, 0x46, 0x66, 0xf8, 0xb7, 0x07, 0xdd, 0x80, 0xfd,
	0x29, 0x98, 0x36, 0xe4, 0x00, 0xd6, 0xe2, 0x42, 0x85, 0x26, 0x95, 0x82, 0x76, 0x06, 0x9d, 0xd1,
	0x66, 0xb0, 0xc0, 0x64, 0x08, 0x1b, 0x18, 0x1d, 0x49, 0xfe, 0xfb, 0x3e, 0x67, 0x74, 0x69, 0xd0,
	0x19, 0xad, 0x07, 0x0d, 0x8e, 0x50, 0xe8, 0x6a, 0xa6, 0xe6, 0x69, 0xc4, 0xe8, 0xff, 0x18, 0x5e,
	0x41, 0x42, 0x60, 0x79, 0xc6, 0xc3, 0x84, 0x2e, 0x63, 0x14, 0x7e, 0xdb, 0x6a, 0x5a, 0x45, 0xdf,
	0xee, 0x0d, 0xd3, 0x74, 0xc5, 0x55, 0xab, 0x30, 0x76, 0xa2, 0x8d, 0xd3, 0x56, 0xcb, 0x4e, 0x4a,
	0x6c, 0x73, 0xf1, 0x50, 0xc4, 0xb4, 0x8b, 0x3c, 0x7e, 0x93, 0x63, 0xd8, 0xbc, 0x53, 0x52, 0x24,
	0x17, 0x2a, 0x4c, 0x32, 0x26, 0x0c, 0x5d, 0x43, 0xb1, 0x49, 0x92, 0x7d, 0x58, 0x2d, 0x54, 0x62,
	0xe5, 0x75, 0x94, 0x4b, 0x64, 0x33, 0xde, 0x4a, 0x6d, 0x28, 0xb8, 0x8c, 0xf6, 0x9b, 0x8c, 0x60,
	0x5b, 0x14, 0xd9, 0x45, 0x98, 0x72, 0x16, 0xff, 0x94, 0x49, 0x2a, 0x34, 0xed, 0xa1, 0xdc, 0xa6,
	0x6d, 0xaf, 0x5c, 0x26, 0x09, 0x8b, 0x7f, 0x08, 0xba, 0xe1, 0x7a, 0xad, 0x30, 0x39, 0x81, 0x2d,
	0x51, 0x64, 0x13, 0x99, 0xe5, 0x4a, 0x66, 0xa9, 0x66, 0x31, 0xdd, 0x44, 0x47, 0x8b, 0x25, 0x87,
	0xb0, 0xae, 0xa4, 0x34, 0xd3, 0x5b, 0xc6, 0x39, 0xdd, 0x42, 0x4b, 0x4d, 0x90, 0x01, 0xf4, 0x74,
	0x71, 0x66, 0x0c, 0xcb, 0x72, 0xc3, 0x62, 0xba, 0x8d, 0xba, 0x4f, 0xd9, 0xc9, 0x8b, 0x22, 0x0b,
	0xa4, 0x34, 0x74, 0xc7, 0x4d, 0xbe, 0x84, 0xe4, 0x23, 0xec, 0xd8, 0x86, 0x53, 0xce, 0x26, 0x8a,
	0xe1, 0x55, 0x6a, 0xba, 0x8b, 0x96, 0x07, 0xbc, 0xed, 0x42, 0x14, 0x19, 0xd6, 0xd4, 0x94, 0xb8,
	0x2e, 0x16, 0x44, 0x79, 0x96, 0xb3, 0x28, 0x62, 0x5a, 0xdb, 0x38, 0x4d, 0x9f, 0x2d, 0xce, 0xe2,
	0xb1, 0xe5, 0xe4, 0x7e, 0x15, 0xe6, 0x46, 0x16, 0x22, 0x9e, 0x64, 0xb1, 0xa6, 0xfd, 0xc5, 0xe4,
	0x7c, 0x9a, 0x1c, 0x01, 0xa4, 0xfa, 0x4a, 0x1a, 0x1c, 0x24, 0xdd, 0x43, 0x93, 0xc7, 0xd8, 0x9d,
	0x4b, 0xf5, 0xa5, 0x5d, 0x4d, 0xe7, 0xd8, 0x47, 0x47, 0x83, 0x23, 0x7d, 0x58, 0x89, 0x64, 0x21,
	0x0c, 0x7d, 0x8e, 0xa2, 0x03, 0x6e, 0xb7, 0xe6, 0x13, 0x14, 0x68, 0xb5, 0x5b, 0x0e, 0xdb, 0xaa,
	0xfa, 0xbb, 0x52, 0x52, 0x05, 0xa1, 0x61, 0xf4, 0xc5, 0xa0, 0x33, 0x5a, 0x0a, 0x3c, 0xc6, 0xee,
	0x92, 0x56, 0xf3, 0x69, 0x6d, 0x39, 0x40, 0x4b, 0x93, 0xb4, 0x59, 0x54, 0x6d, 0x79, 0xe9, 0xb2,
	0xa8, 0x76, 0x96, 0xa0, 0xb6, 0x1c, 0x2e, 0xb2, 0xd4, 0x24, 0xde, 0x6c, 0x98, 0xb1, 0xa9, 0x9a,
	0xa3, 0xe7, 0x15, 0x7a, 0x7c, 0xca, 0x3a, 0xe2, 0x74, 0x36, 0xab, 0x1c, 0x47, 0xce, 0xe1, 0x51,
	0x76, 0xde, 0x5a, 0xcd, 0xcf, 0xd3, 0xd9, 0xec, 0x4a, 0x6a, 0x83, 0xae, 0xd7, 0xe8, 0x6a, 0xd3,
	0x76, 0x9e, 0xb1, 0x36, 0x16, 0xba, 0xc9, 0x0c, 0xdc, 0x3c, 0x7d, 0xce, 0x66, 0x2b, 0xf1, 0xb4,
	0x1a, 0xe0, 0x1b, 0x77, 0x7b, 0x2d, 0x9a, 0x8c, 0x81, 0x54, 0x94, 0x77, 0x84, 0x21, 0x96, 0x7e,
	0x44, 0xf1, 0xfc, 0xe7, 0xde, 0x81, 0xde, 0x36, 0xfc, 0x9e, 0x42, 0xbe, 0xc0, 0x7e, 0x23, 0x4b,
	0x74, 0x2d, 0x95, 0x3b, 0xde, 0x31, 0xc6, 0x3c, 0xa1, 0xfa, 0x71, 0xad, 0xb1, 0xbc, 0x6b, 0xc6,
	0xb5, 0xa6, 0xf3, 0x09, 0x76, 0x2b, 0xa5, 0xbe, 0xb5, 0x13, 0x0c, 0x79, 0x28, 0x90, 0x53, 0xe8,
	0xd7, 0x79, 0xbc, 0x80, 0xf7, 0x18, 0xf0, 0xa8, 0xe6, 0x55, 0xf0, 0xf6, 0x62, 0xd4, 0xa8, 0x10,
	0x3c, 0x51, 0xc1, 0x0b, 0xf8, 0xd0, 0xae, 0x50, 0x6b, 0xc3, 0x01, 0xac, 0x05, 0x4c, 0xe7, 0x52,
	0x68, 0x66, 0x7f, 0x19, 0x3c, 0xbc, 0x61, 0xbc, 0x7c, 0xca, 0x1d, 0x38, 0xbd, 0x84, 0x5e, 0xf9,
	0xf4, 0x5f, 0x70, 0x79, 0x47, 0xbe, 0x42, 0x37, 0x77, 0x90, 0xf4, 0xc7, 0xde, 0xff, 0xc2, 0xb8,
	0xfc, 0x4f, 0x38, 0xd8, 0x6b, 0xb1, 0x2e, 0xf9, 0xf0, 0xbf, 0x9b, 0x55, 0x7c, 0xfa, 0x3f, 0xff,
	0x0b, 0x00, 0x00, 0xff, 0xff, 0x04, 0x47, 0x56, 0x5a, 0x5a, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PredictFlowClient is the client API for PredictFlow service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PredictFlowClient interface {
	Predict(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type predictFlowClient struct {
	cc grpc.ClientConnInterface
}

func NewPredictFlowClient(cc grpc.ClientConnInterface) PredictFlowClient {
	return &predictFlowClient{cc}
}

func (c *predictFlowClient) Predict(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/CallPredict.PredictFlow/predict", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PredictFlowServer is the server API for PredictFlow service.
type PredictFlowServer interface {
	Predict(context.Context, *Request) (*Response, error)
}

// UnimplementedPredictFlowServer can be embedded to have forward compatible implementations.
type UnimplementedPredictFlowServer struct {
}

func (*UnimplementedPredictFlowServer) Predict(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Predict not implemented")
}

func RegisterPredictFlowServer(s *grpc.Server, srv PredictFlowServer) {
	s.RegisterService(&_PredictFlow_serviceDesc, srv)
}

func _PredictFlow_Predict_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PredictFlowServer).Predict(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CallPredict.PredictFlow/Predict",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PredictFlowServer).Predict(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _PredictFlow_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CallPredict.PredictFlow",
	HandlerType: (*PredictFlowServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "predict",
			Handler:    _PredictFlow_Predict_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "data.proto",
}
